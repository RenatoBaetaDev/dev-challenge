var app=angular.module("todoItemsApp",["templates","ui.router","xeditable","toaster","ngAnimate"]);
app.filter("truncate",function(){return function(input,limit){return input.length>limit?input.substr(0,limit)+"â€¦":input}}),app.filter("paragraph",function(){return function(input){return input.replace(/\n/g,"<br />")}});
app.config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("list",{url:"/",templateUrl:"list/list.html",controller:"indexCtl",resolve:{todos:function(todoFactory){return todoFactory.getTodos()}}}).state("create",{url:"/create",templateUrl:"create/create.html",controller:"addCtl"}).state("edit",{url:"/todoItems/:id",templateUrl:"edit/edit.html",controller:"todoItemCtl",resolve:{todo:function(todoFactory,$stateParams){return todoFactory.getById($stateParams.id)}}})}]);
angular.module("templates",[]);
app.factory("todoFactory",["$http","apiURL",function($http,apiURL){var todoFactory={};function baseUrl(){return apiURL.get()+"task/"}return todoFactory.getTodos=function(){return $http.get(baseUrl())},todoFactory.create=function(todo){return $http.post(baseUrl(),todo)},todoFactory.delete=function(todoID){return $http.delete(baseUrl()+todoID)},todoFactory.getById=function(todoID){return $http.get(baseUrl()+todoID)},todoFactory.update=function(todo){return $http.put(baseUrl()+todo.id,todo)},todoFactory}]);
app.service("apiURL",["$location",function($location){this.get=function(){return $location.protocol()+"://todoapp.test/"}}]);
app.controller("addCtl",["$scope","todoFactory","$state","toaster",function($scope,$todoFactory,$state,toaster){$scope.todoItem={},$scope.todoItem.dueBy=new Date,$scope.submit=function(){if(date=$scope.todoItem.dueBy,day=date.getDate(),month=date.getMonth()+1,year=date.getFullYear(),formattedDate=[year,month,day].join("-"),dateRegex=/^\d{4}\-\d{1,2}\-\d{1,2}$/,!dateRegex.test(formattedDate))return toaster.pop("error","Error","Please insert a valid date!"),!1;$scope.todoItem.dueBy=formattedDate,$todoFactory.create($scope.todoItem).then(function(response){toaster.pop("success","Sucess","The ToDo Item was successfully created!"),$state.go("list")},function(response){toaster.pop("error","Error","Error trying to delete the item! Please contact the admin!")})},$scope.reset=function(){$scope.todoItem=null}}]);
app.controller("todoItemCtl",["$scope","todoFactory","todo","toaster",function($scope,todoFactory,todo,toaster){$scope.todoItem=todo.data.data,$scope.save=function(){if($scope.todoItem.dueBy=new Date($scope.todoItem.dueBy),date=$scope.todoItem.dueBy,day=date.getDate(),month=date.getMonth()+1,year=date.getFullYear(),formattedDate=[year,month,day].join("-"),dateRegex=/^\d{4}\-\d{1,2}\-\d{1,2}$/,!dateRegex.test(formattedDate))return toaster.pop("error","Error","Please insert a valid date!"),!1;$scope.todoItem.dueBy=formattedDate,todoFactory.update($scope.todoItem).then(function(response){toaster.pop("success","Sucess","Saved!")},function(response){toaster.pop("error","Error","Error trying to update item. Please contact the admin!")})}}]);
app.controller("indexCtl",["$scope","todoFactory","todos","toaster",function($scope,todoFactory,todos,toaster){$scope.todoItems=todos.data.data,$scope.delete=function(id){function getIndexById(todo){return todo.id==id}todoFactory.delete(id).then(function(response){var index=$scope.todoItems.findIndex(getIndexById);$scope.todoItems.splice(index,1),toaster.pop("success","Sucess","The ToDo Item was successfully deleted!")},function(response){toaster.pop("error","Error","Error trying to delete the item! Please contact the admin!")})}}]);
angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("create/create.html",'<div class="page-header"><h1>Create ToDo Item</h1></div><form class="form-horizontal" ng-submit="submit()"><div class="row"><div class="col-sm-6"><div class="form-group"><label class="control-label col-sm-4" for="description">Description</label><div class="col-sm-8"><input class="form-control" id="description" type="text" focus-on="focusMe" ng-model="todoItem.description" ng-required="true"/></div></div><div class="form-group"><label class="control-label col-sm-4" for="category">Category</label><div class="col-sm-8"><select class="form-control" id="category" ng-model="todoItem.category" ng-options="c.desc as c.desc for c in [{desc: \'Professional\'}, {desc: \'Domestic\'}, {desc: \'Other\'} ]" ng-required="true"><option value="">Please choose a category</option></select></div></div><div class="form-group"><label class="control-label col-sm-4" for="complete">Complete?</label><div class="col-sm-8"><select class="form-control" id="category" ng-model="todoItem.complete" ng-options="c.value as c.value for c in [{value: \'true\'}, {value: \'false\'} ]" ng-required="true">                   <option value="">Please choose a status</option></select></div></div></div><div class="col-sm-6"><div class="form-group"><label class="control-label col-sm-4" for="dueBy">Due by</label><div class="col-sm-8"><input class="form-control" id="dueBy" type="date" ng-model="todoItem.dueBy" ng-required="true"/></div></div><div class="form-group"><label class="control-label col-sm-4" for="costs">Costs</label><div class="col-sm-8"><input class="form-control" id="costs" type="number" ng-model="todoItem.costs" ng-required="true" min="0"/></div></div><div class="form-group"><label class="control-label col-sm-4" for="notes">Notes</label><div class="col-sm-8"><textarea class="form-control" id="notes" ng-model="todoItem.notes" bs-tooltip="" data-title="Any additional information about the todo item." data-trigger="focus" data-placement="bottom" ng-required="true"></textarea></div></div></div></div><div class="row"><div class="col-sm-offset-2 col-sm-5"><input class="btn btn-primary" type="submit" value="Create"/></div><div class="col-sm-5"><a class="btn btn-danger" ng-click="reset()">Reset    </a></div></div></form>'),$templateCache.put("edit/edit.html",'<div class="page-header"><h1>{{todoItem.description}}</h1></div><div class="form-horizontal" ng-submit="save()"><div class="row"><div class="col-xs-6"><div class="form-group"><label class="control-label col-sm-4" for="description">Name</label><div class="col-sm-8"><p class="form-control-static">{{todoItem.description}}</p></div></div><div class="form-group"><label class="control-label col-sm-4" for="category">Category</label><div class="col-sm-8"><a class="form-control-static" focus-on="focusMe" editable-select="todoItem.category" e-ng-options="c.desc as c.desc for c in [{desc: \'Professional\'}, {desc: \'Domestic\'}, {desc: \'Other\'} ]">{{ todoItem.category }}</a></div></div><div class="form-group"><label class="control-label col-sm-4" for="complete">Complete?</label><div class="col-sm-8"><a class="form-control-static" editable-checkbox="todoItem.complete">{{ todoItem.complete && "Completed" || "Not complete" }}</a></div></div></div><div class="col-xs-6"><div class="form-group"><label class="control-label col-sm-4" for="dueBy">Due by</label><div class="col-sm-8"><a class="form-control-static" href="#" editable-date="todoItem.dueBy">{{ ( todoItem.dueBy | date:\'dd/MMM/yyyy\' ) || \'no date\' }}</a></div></div><div class="form-group"><label class="control-label col-sm-4" for="costs">Costs</label><div class="col-sm-8"><a class="form-control-static" editable-number="todoItem.costs" e-min="0">{{ todoItem.costs || \'none\' }}</a></div></div><div class="form-group"><label class="control-label col-sm-4" for="notes">Notes</label><div class="col-sm-8"><a class="form-control-static" editable-textarea="todoItem.notes" e-rows="7" e-cols="30"><pre>{{ todoItem.notes }}        </pre></a></div></div></div></div></div><div class="row"><div class="col-sm-offset-2 col-sm-5">      <a class="btn btn-primary" ui-sref="list">Return</a></div></div>'),$templateCache.put("list/list.html",'<div class="page-header"><h1>Stuff to do...</h1></div><div class="table-responsive"><table class="table table-bordered table-striped table-hover"><thead><tr><th>Description</th><th>Category</th><th>Complete?</th><th>Due by</th><th>Actions</th></tr></thead><tbody><tr ng-repeat="todoItem in todoItems | filter:search"><td><a ui-sref="edit({id:{{todoItem.id}}})">{{todoItem.description}}</a></td><td>{{todoItem.category}}</td><td>{{todoItem.complete}}</td><td>{{todoItem.dueBy | date:&apos;dd-MMM-yyyy&apos;}}</td><td><button class="btn btn-danger btn-xs" ng-click="delete(todoItem.id)"><span class="label">Delete</span></button></td></tr></tbody></table></div><div class="row"><div class="col-md-12"><a class="btn btn-primary" ui-sref="create">New Todo        </a></div></div>')}]);